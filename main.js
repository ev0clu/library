(()=>{let e=[];const t=document.getElementById("btn-add"),n=document.getElementById("btn-close"),a=document.getElementById("form-content"),r=document.getElementById("modal"),c=document.getElementById("content"),d=document.getElementById("warning"),o=document.querySelector(".header"),i=document.querySelector(".main"),s=document.querySelector(".footer");class l{constructor(e,t,n,a){this.title=e,this.author=t,this.pages=n,this.isRead=a}}function u(){localStorage.setItem("Library",JSON.stringify(e))}function m(e,t){const n=document.createElement("div");n.setAttribute("data-index",`${t}`);const a=document.createElement("h1"),r=document.createElement("p"),d=document.createElement("p"),o=document.createElement("button"),i=document.createElement("button");a.textContent=`${e.title}`,r.textContent=`${e.author}`,d.textContent=`${e.pages} pages read`,o.setAttribute("class","btn-read"),e.isRead?(n.setAttribute("class","card card-read"),o.textContent="Mark as unread"):(n.setAttribute("class","card card-unread"),o.textContent="Mark as read"),i.setAttribute("class","btn-remove"),i.textContent="Remove",c.appendChild(n),n.appendChild(a),n.appendChild(r),n.appendChild(d),n.appendChild(o),n.appendChild(i)}function p(e){c.textContent="";for(let t=0;t<e.length;t++)m(e[t],t)}function y(e){document.querySelectorAll(".btn-read").forEach((t=>{t.addEventListener("click",(n=>{const a=n.target.parentNode,r=a.dataset.index,c=e;a.classList.contains("card-read")?(a.removeAttribute("class","card-read"),a.setAttribute("class","card card-unread"),t.textContent="Mark as read",c[r].isRead=!1):(a.removeAttribute("class","card-unread"),a.setAttribute("class","card card-read"),t.textContent="Mark as unread",c[r].isRead=!0),u()}))}))}function v(){document.querySelectorAll(".btn-remove").forEach((t=>{t.addEventListener("click",(t=>{const n=t.target.parentNode.firstChild.textContent;e=e.filter((e=>e.title!==n)),u(),p(e),v(),y(e)}))}))}function h(t){e.push(t),u()}function E(){r.style.display="none",a.reset(),d.textContent="",o.classList.remove("inactive"),i.classList.remove("inactive"),s.classList.remove("inactive")}t.addEventListener("click",(()=>{r.style.display="block",o.classList.add("inactive"),i.classList.add("inactive"),s.classList.add("inactive")})),n.addEventListener("click",(()=>{E()})),a.addEventListener("submit",(t=>{t.preventDefault();const n=function(){const e=document.getElementById("title").value,t=document.getElementById("author").value,n=document.getElementById("pages").value,a=document.getElementById("read").checked;return new l(e,t,n,a)}();!function(t){return e.map((e=>e.title)).some((e=>e===t.title))}(n)?(h(n),E(),p(e),v(),y(e)):d.textContent="Already exist in the library"})),e=JSON.parse(localStorage.getItem("Library")),null==e?(e=[],function(){const e=new l("Way of the Peaceful Warrior","Dan Millman","216",!0),t=new l("Peaceful Heart, Warrior Spirit","Dan Millman","143",!1);h(e),h(t)}(),p(e),v(),y(e)):(p(e),v(),y(e))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,